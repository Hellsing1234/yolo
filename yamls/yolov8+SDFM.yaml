# Ultralytics YOLO üöÄ, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 102 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs
#30
# YOLOv8.0n backbone
backbone:                                                   # ÁúüÂÆûËæìÂá∫ÈÄöÈÅìÊï∞   ÁâπÂæÅÂõæÂ∞∫ÂØ∏
  # [from, repeats, module, args]                           3                   640
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2                      16                  320
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4                     32                  160x160
  - [-1, 3, C2f, [128, True]]   #2 3*1=3                    32
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8                     64                  80
  - [-1, 6, C2f, [256, True]]   #4 6*2 =12                  64
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16                    128                 40
  - [-1, 6, C2f, [512, True]]   #6 6*2 =12                  128
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32                   256                 20x20
  - [-1, 3, C2f, [1024, True]]  #8 3*1=3                    256
  - [-1, 1, SPPF, [1024, 5]] # 9                            ÁúüÂÆûÈÄöÈÅì 256

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #10          256                   40x40
  - [6, 1, Conv, [1024, 1, 1]] #11                          256             
  - [[-1, -2], 1, SDFM, [256, 256]]  #12                     256
  - [-1, 3, C2f, [512]] # 13  #3*1=3                        128       
                    

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #14          128                   80X80
  - [4, 1, Conv, [512, 1, 1]] #15            Á¨¨4Â±ÇËæìÂá∫x4    256*4/4=256
  - [[-1, -2], 1, SDFM, [128, 128]] #16                        256
 # - [[-1, 4], 1, Concat, [1]] #14 cat backbone P3           192=128+64 
  - [-1, 3, C2f, [256]] # 17 (P3/8-small) #3*1=3            64

  - [-1, 1, Conv, [1024, 3, 2]] #18                          64                    40x40
  - [[-1, 12], 1, SDFM, [256, 256]] #19
  #- [[-1, 12], 1, Concat, [1]] #17 cat head P4              192=64+128            
  
  - [-1, 3, C2f, [512]] # 20 (P4/16-medium) #3*1=3          128

  - [-1, 1, Conv, [1024, 3, 2]] #21                          128                   20x20
#  - [[-1, 9], 1, Concat, [1]] #20 cat head P5               384=126+256
  - [[-1, 9], 1, SDFM, [256, 256]] #22
  - [-1, 3, C2f, [1024]] # 23 (P5/32-large) #3*1=3          256

  - [[17, 20, 23], 1, Detect, [nc]] #22 Detect(P3, P4, P5)
